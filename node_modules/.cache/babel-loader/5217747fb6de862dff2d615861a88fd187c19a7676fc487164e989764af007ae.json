{"ast":null,"code":"var _jsxFileName = \"/Users/danielpopchenko/Desktop/react-lesson06-http/src/components/PokemonInfo.js\";\nimport React, { Component } from 'react';\nimport PokemonErrorView from './PokemonErrorView';\nimport PokemonDataView from './PokemonDataView';\nimport PokemonPendingView from './PokemonPendingView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PokemonInfo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      pokemon: null,\n      error: null,\n      // ! State машина idle, resolved, rejected, pending\n      status: 'idle'\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.pokemonName;\n    const nextName = this.props.pokemonName;\n\n    // ! Обязательно делать проверку\n    if (prevName !== nextName) {\n      console.log('Pokemon name has updated');\n\n      // ! Меняем статус. 'активируем' загрузку и скрываем покемона перед новым запросом\n      this.setState({\n        status: 'pending'\n      });\n      fetch(`https://pokeapi.co/api/v2/pokemon/${nextName}`).then(response => {\n        // ! Правильная обработка ошибки 404 с кастомным текстом\n        if (response.ok) {\n          return response.json();\n        }\n        //   ! new Error('message') - генерит объект ошибки и 'message' будет записан в свойство message\n        return Promise.reject(new Error(`Everything crashed, there is no pokemon with this name: ${nextName}`));\n      })\n      //  ! Меняем статус\n      .then(pokemon => this.setState({\n        pokemon,\n        status: 'resolved'\n      }))\n      //  ! Меняем статус\n      .catch(error => this.setState({\n        error,\n        status: 'rejected'\n      }));\n    }\n  }\n\n  //   idle;\n  //   pending;\n  //   resolved;\n  //   rejected;\n\n  render() {\n    const {\n      pokemon,\n      error,\n      status\n    } = this.state;\n    if (status === 'idle') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Enter pokemon name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n    }\n    if (status === 'pending') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this);\n    }\n    if (status === 'rejected') {\n      return /*#__PURE__*/_jsxDEV(PokemonErrorView, {\n        message: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    }\n    if (status === 'resolved') {\n      return /*#__PURE__*/_jsxDEV(PokemonDataView, {\n        pokemon: pokemon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    }\n  }\n}\n\n// return (\n//     <div>\n//       {error && (\n//         <div>\n//           <h2>Everything crashed, there is no pokemon with this name: {pokemonName}</h2>\n//         </div>\n//       )}\n//       {loading && <div>Loading...</div>}\n//       {!pokemonName && <div>Enter pokemon name.</div>}\n//       {pokemon && (\n//         <div>\n//           <p>{pokemon.name}</p>\n//           <img src={pokemon.sprites.other['official-artwork'].front_default} alt=\"pokemonImage\" width={300} />\n//         </div>\n//       )}\n//     </div>\n//   );","map":{"version":3,"names":["React","Component","PokemonErrorView","PokemonDataView","PokemonPendingView","PokemonInfo","state","pokemon","error","status","componentDidUpdate","prevProps","prevState","prevName","pokemonName","nextName","props","console","log","setState","fetch","then","response","ok","json","Promise","reject","Error","catch","render","message"],"sources":["/Users/danielpopchenko/Desktop/react-lesson06-http/src/components/PokemonInfo.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport PokemonErrorView from './PokemonErrorView';\nimport PokemonDataView from './PokemonDataView';\nimport PokemonPendingView from './PokemonPendingView';\n\nexport default class PokemonInfo extends Component {\n  state = {\n    pokemon: null,\n    error: null,\n    // ! State машина idle, resolved, rejected, pending\n    status: 'idle',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.pokemonName;\n    const nextName = this.props.pokemonName;\n\n    // ! Обязательно делать проверку\n    if (prevName !== nextName) {\n      console.log('Pokemon name has updated');\n\n      // ! Меняем статус. 'активируем' загрузку и скрываем покемона перед новым запросом\n      this.setState({ status: 'pending' });\n\n      fetch(`https://pokeapi.co/api/v2/pokemon/${nextName}`)\n        .then((response) => {\n          // ! Правильная обработка ошибки 404 с кастомным текстом\n          if (response.ok) {\n            return response.json();\n          }\n          //   ! new Error('message') - генерит объект ошибки и 'message' будет записан в свойство message\n          return Promise.reject(new Error(`Everything crashed, there is no pokemon with this name: ${nextName}`));\n        })\n        //  ! Меняем статус\n        .then((pokemon) => this.setState({ pokemon, status: 'resolved' }))\n        //  ! Меняем статус\n        .catch((error) => this.setState({ error, status: 'rejected' }));\n    }\n  }\n\n  //   idle;\n  //   pending;\n  //   resolved;\n  //   rejected;\n\n  render() {\n    const { pokemon, error, status } = this.state;\n\n    if (status === 'idle') {\n      return <div>Enter pokemon name.</div>;\n    }\n\n    if (status === 'pending') {\n      return <div>Loading...</div>;\n    }\n\n    if (status === 'rejected') {\n      return <PokemonErrorView message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return <PokemonDataView pokemon={pokemon} />;\n    }\n  }\n}\n\n// return (\n//     <div>\n//       {error && (\n//         <div>\n//           <h2>Everything crashed, there is no pokemon with this name: {pokemonName}</h2>\n//         </div>\n//       )}\n//       {loading && <div>Loading...</div>}\n//       {!pokemonName && <div>Enter pokemon name.</div>}\n//       {pokemon && (\n//         <div>\n//           <p>{pokemon.name}</p>\n//           <img src={pokemon.sprites.other['official-artwork'].front_default} alt=\"pokemonImage\" width={300} />\n//         </div>\n//       )}\n//     </div>\n//   );\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC;AAEtD,eAAe,MAAMC,WAAW,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KACjDK,KAAK,GAAG;MACNC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACX;MACAC,MAAM,EAAE;IACV,CAAC;EAAA;EAEDC,kBAAkB,CAACC,SAAS,EAAEC,SAAS,EAAE;IACvC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,WAAW;IACtC,MAAMC,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACF,WAAW;;IAEvC;IACA,IAAID,QAAQ,KAAKE,QAAQ,EAAE;MACzBE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;MAEvC;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEV,MAAM,EAAE;MAAU,CAAC,CAAC;MAEpCW,KAAK,CAAE,qCAAoCL,QAAS,EAAC,CAAC,CACnDM,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;QACxB;QACA;QACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAE,2DAA0DZ,QAAS,EAAC,CAAC,CAAC;MACzG,CAAC;MACD;MAAA,CACCM,IAAI,CAAEd,OAAO,IAAK,IAAI,CAACY,QAAQ,CAAC;QAAEZ,OAAO;QAAEE,MAAM,EAAE;MAAW,CAAC,CAAC;MACjE;MAAA,CACCmB,KAAK,CAAEpB,KAAK,IAAK,IAAI,CAACW,QAAQ,CAAC;QAAEX,KAAK;QAAEC,MAAM,EAAE;MAAW,CAAC,CAAC,CAAC;IACnE;EACF;;EAEA;EACA;EACA;EACA;;EAEAoB,MAAM,GAAG;IACP,MAAM;MAAEtB,OAAO;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACH,KAAK;IAE7C,IAAIG,MAAM,KAAK,MAAM,EAAE;MACrB,oBAAO;QAAA,UAAK;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAM;IACvC;IAEA,IAAIA,MAAM,KAAK,SAAS,EAAE;MACxB,oBAAO;QAAA,UAAK;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM;IAC9B;IAEA,IAAIA,MAAM,KAAK,UAAU,EAAE;MACzB,oBAAO,QAAC,gBAAgB;QAAC,OAAO,EAAED,KAAK,CAACsB;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IACrD;IAEA,IAAIrB,MAAM,KAAK,UAAU,EAAE;MACzB,oBAAO,QAAC,eAAe;QAAC,OAAO,EAAEF;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAC9C;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}